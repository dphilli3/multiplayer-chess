{"ast":null,"code":"var _jsxFileName = \"/Users/dakotaphillips/Desktop/multiplayer-chess/client/src/Game.js\",\n  _s = $RefreshSig$();\nimport { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Game({\n  players,\n  room,\n  orientation,\n  cleanup\n}) {\n  _s();\n  const chess = useMemo(() => new Chess(), []); // <- 1\n  const [fen, setFen] = useState(chess.fen()); // <- 2\n  const [over, setOver] = useState(\"\");\n  const makeAMove = useCallback(move => {\n    try {\n      const result = chess.move(move); //Update chess instance\n      setFen(chess.fen()); // update fen state to trigger re-render\n\n      console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n      if (chess.isGameOver()) {\n        // check if move lead to \"game over\"\n        if (chess.isCheckmate()) {\n          //if reason for game over is a checkmate\n          //Set message to checkmate.\n          setOver(`Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`);\n          // The winner is determined by checking which side made the last move\n        } else if (chess.isDraw()) {\n          // if it is a draw\n          setOver(\"Draw\");\n        } else {\n          setOver(\"Game over\");\n        }\n      }\n      return result;\n    } catch (e) {\n      return null;\n    } // null if the move was illegal, the move object if the move was legal\n  }, [chess]);\n  function onDrop(sourceSquare, targetSquare) {\n    const moveData = {\n      from: sourceSquare,\n      to: targetSquare,\n      color: chess.turn()\n      // promotion: \"q\",\n    };\n\n    const move = makeAMove(moveData);\n\n    //illegal move\n    if (move === null) return false;\n    return true;\n  } // <- 3\n\n  //game component returned jsx\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onPieceDrop: onDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CustomDialog // <- 5\n    , {\n      open: Boolean(over),\n      title: over,\n      contentText: over,\n      handleContinue: () => {\n        setOver(\"\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Game, \"b5ocUstPxAWuGUNL7RFptmYJkjA=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useState","useMemo","useCallback","useEffect","Chessboard","Chess","CustomDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","players","room","orientation","cleanup","_s","chess","fen","setFen","over","setOver","makeAMove","move","result","console","log","isGameOver","isCheckmate","turn","isDraw","e","onDrop","sourceSquare","targetSquare","moveData","from","to","color","children","className","position","onPieceDrop","fileName","_jsxFileName","lineNumber","columnNumber","open","Boolean","title","contentText","handleContinue","_c","$RefreshReg$"],"sources":["/Users/dakotaphillips/Desktop/multiplayer-chess/client/src/Game.js"],"sourcesContent":["import { useState, useMemo, useCallback, useEffect } from \"react\";\nimport { Chessboard } from \"react-chessboard\";\nimport { Chess } from \"chess.js\";\nimport CustomDialog from \"./components/CustomDialog\";\n\nfunction Game({players, room, orientation, cleanup }) {\n    const chess = useMemo(() => new Chess(), []); // <- 1\n    const [fen, setFen] = useState(chess.fen()); // <- 2\n    const [over, setOver] = useState(\"\");\n\n    const makeAMove = useCallback(\n        (move) => {\n            try {\n                const result = chess.move(move); //Update chess instance\n                setFen(chess.fen()); // update fen state to trigger re-render\n\n                console.log(\"over, checkmate\", chess.isGameOver(), chess.isCheckmate());\n\n                if(chess.isGameOver()) { // check if move lead to \"game over\"\n                    if (chess.isCheckmate()) { //if reason for game over is a checkmate\n                    //Set message to checkmate.\n                        setOver(\n                            `Checkmate! ${chess.turn() === \"w\" ? \"black\" : \"white\"} wins!`\n                        );\n                            // The winner is determined by checking which side made the last move\n                    } else if (chess.isDraw()) { // if it is a draw\n                        setOver(\"Draw\");\n                    } else {\n                        setOver(\"Game over\");\n                    }\n                }\n\n                return result;\n            } catch (e) {\n                return null;\n            } // null if the move was illegal, the move object if the move was legal\n        },\n        [chess]\n    );\n\n    function onDrop(sourceSquare, targetSquare) {\n        const moveData = {\n            from: sourceSquare,\n            to: targetSquare,\n            color: chess.turn(),\n            // promotion: \"q\",\n        };\n\n        const move = makeAMove(moveData);\n\n        //illegal move\n        if (move === null) return false;\n\n        return true;\n    } // <- 3\n\n        //game component returned jsx\n    return (\n        <>\n            <div className=\"board\">\n                <Chessboard position={fen} onPieceDrop={onDrop} /> {/** <- 4 */}\n            </div>\n            <CustomDialog // <- 5\n                open={Boolean(over)}\n                title = {over}\n                contentText={over}\n                handleContinue={() => {\n                    setOver(\"\");\n                }}\n            />\n        </>\n    );\n}\n\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}