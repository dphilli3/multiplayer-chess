{"ast":null,"code":"var _jsxFileName = \"/Users/dakotaphillips/Desktop/multiplayer-chess/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Container, TextField } from \"@mui/material\";\nimport Game from \"./Game\";\nimport InitGame from \"./InitGame\";\nimport socket from \"./socket\";\nimport CustomDialog from \"./components/CustomDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [username, setUsername] = useState('');\n  //indicates if a username has been submitted\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n  const [room, setRoom] = useState(\"\");\n  const [orientation, setOrientation] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n\n  //resets the states responsible for initializing a game\n  const cleanup = useCallback(() => {\n    setRoom(\"\");\n    setOrientation(\"\");\n    setPlayers(\"\");\n  }, []);\n  useEffect(() => {\n    //const username = prompt(\"Username\");\n    // setUsername(username);\n    // socket.emit(\"username\", username);\n\n    socket.on(\"opponentJoined\", roomData => {\n      console.log(\"roomData\", roomData);\n      setPlayers(roomData.players);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CustomDialog, {\n      open: !usernameSubmitted // leave open if username has not been selected\n      ,\n      title: \"Pick a username\" // Title of dialog\n      ,\n      contentText: \"Please select a username\" // context text of dialog\n      ,\n      handleContinue: () => {\n        // fired when continue is clicked\n        if (!username) return; //if username hasn't been entered, do nothing\n        socket.emit(\"username\", username); // emit a websocket event called \"username\"\n        setUsernameSubmitted(true); //indicate that username has been submitted\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField //Input\n      , {\n        autoFocus: true //automatically set focus on input (make it active).\n        ,\n        margin: \"dense\",\n        id: \"username\",\n        label: \"Username\",\n        value: username,\n        required: true,\n        onChange: e => setUsername(e.target.value) //update username state with value\n        ,\n        type: \"text\",\n        fullWidth: true,\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vPFeRJDmNPzeItfDZj3lBt8cM2k=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Container","TextField","Game","InitGame","socket","CustomDialog","jsxDEV","_jsxDEV","App","_s","username","setUsername","usernameSubmitted","setUsernameSubmitted","room","setRoom","orientation","setOrientation","players","setPlayers","cleanup","useCallback","on","roomData","console","log","children","open","title","contentText","handleContinue","emit","autoFocus","margin","id","label","value","required","onChange","e","target","type","fullWidth","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dakotaphillips/Desktop/multiplayer-chess/client/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Container, TextField } from \"@mui/material\";\nimport Game from \"./Game\";\nimport InitGame from \"./InitGame\";\nimport socket from \"./socket\";\nimport CustomDialog from \"./components/CustomDialog\";\n\nexport default function App() {\n  const [username, setUsername] = useState('');\n  //indicates if a username has been submitted\n  const [usernameSubmitted, setUsernameSubmitted] = useState(false);\n\n  const [room, setRoom] = useState(\"\");\n  const [orientation, setOrientation] = useState(\"\");\n  const [players, setPlayers] = useState([]);\n\n  \n  //resets the states responsible for initializing a game\n  const cleanup = useCallback(() => {\n    setRoom(\"\");\n    setOrientation(\"\");\n    setPlayers(\"\");\n  }, []);\n\n  useEffect(() => {\n    //const username = prompt(\"Username\");\n    // setUsername(username);\n    // socket.emit(\"username\", username);\n\n    socket.on(\"opponentJoined\", (roomData) => {\n      console.log(\"roomData\", roomData)\n      setPlayers(roomData.players);\n    });\n  }, []);\n\n  return ( \n    <Container>\n      <CustomDialog \n        open={!usernameSubmitted} // leave open if username has not been selected\n        title=\"Pick a username\" // Title of dialog\n        contentText=\"Please select a username\" // context text of dialog\n        handleContinue={() => { // fired when continue is clicked\n          if (!username) return; //if username hasn't been entered, do nothing\n          socket.emit(\"username\", username); // emit a websocket event called \"username\"\n          setUsernameSubmitted(true); //indicate that username has been submitted\n        }}\n      >\n        <TextField //Input\n          autoFocus //automatically set focus on input (make it active).\n          margin=\"dense\"\n          id=\"username\"\n          label=\"Username\"\n          value={username}\n          required\n          onChange={(e) => setUsername(e.target.value)} //update username state with value\n          type=\"text\"\n          fullWidth\n          variant=\"standard\"\n          />\n      </CustomDialog>\n      <Game />\n    </Container>\n  );\n}\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,EAAEC,SAAS,QAAQ,eAAe;AACpD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACa,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;;EAG1C;EACA,MAAMqB,OAAO,GAAGC,WAAW,CAAC,MAAM;IAChCN,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;IAClBE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd;IACA;IACA;;IAEAM,MAAM,CAACkB,EAAE,CAAC,gBAAgB,EAAGC,QAAQ,IAAK;MACxCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAAC;MACjCJ,UAAU,CAACI,QAAQ,CAACL,OAAO,CAAC;IAC9B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAACP,SAAS;IAAA0B,QAAA,gBACRnB,OAAA,CAACF,YAAY;MACXsB,IAAI,EAAE,CAACf,iBAAkB,CAAC;MAAA;MAC1BgB,KAAK,EAAC,iBAAiB,CAAC;MAAA;MACxBC,WAAW,EAAC,0BAA0B,CAAC;MAAA;MACvCC,cAAc,EAAEA,CAAA,KAAM;QAAE;QACtB,IAAI,CAACpB,QAAQ,EAAE,OAAO,CAAC;QACvBN,MAAM,CAAC2B,IAAI,CAAC,UAAU,EAAErB,QAAQ,CAAC,CAAC,CAAC;QACnCG,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAE;MAAAa,QAAA,eAEFnB,OAAA,CAACN,SAAS,CAAC;MAAA;QACT+B,SAAS,OAAC;QAAA;QACVC,MAAM,EAAC,OAAO;QACdC,EAAE,EAAC,UAAU;QACbC,KAAK,EAAC,UAAU;QAChBC,KAAK,EAAE1B,QAAS;QAChB2B,QAAQ;QACRC,QAAQ,EAAGC,CAAC,IAAK5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE,CAAC;QAAA;QAC9CK,IAAI,EAAC,MAAM;QACXC,SAAS;QACTC,OAAO,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eACfxC,OAAA,CAACL,IAAI;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACtC,EAAA,CAxDuBD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}